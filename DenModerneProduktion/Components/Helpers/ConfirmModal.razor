@inject IJSRuntime JS
<Modal @ref="Modal">
    <HeaderTemplate>
        <h5 class="modal-title">@Text</h5>
    </HeaderTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Primary" @onclick="Confirm">@AcceptText</Button>
        <Button Color="ButtonColor.Secondary" @onclick="Reject">@RejectText</Button>
    </FooterTemplate>
</Modal>

@code {
    [Parameter] public string Text { get; set; } = "Modal Titel";
    [Parameter] public string AcceptText { get; set; } = "Ja";
    [Parameter] public string RejectText { get; set; } = "Nej";

    [Parameter] public EventCallback<MouseEventArgs> OnReject { get; set; } = new EventCallback<MouseEventArgs>();
    [Parameter] public EventCallback<MouseEventArgs> OnConfirm { get; set; } = new EventCallback<MouseEventArgs>();

    [Parameter] public Modal Modal { get; set; } = default!;

    public void SetTitle(string title)
    {
        Text = title;
    }

    public async Task Show()
    {
        await Modal.ShowAsync();
    }
    protected void Confirm()
    {
        OnConfirm.InvokeAsync();
        Modal.HideAsync();
    }

    protected void Reject()
    {
        OnReject.InvokeAsync();
        Modal.HideAsync();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }
}